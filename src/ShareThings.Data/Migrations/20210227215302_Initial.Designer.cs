// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareThings.Data.Context;

namespace ShareThings.Data.Migrations
{
    [DbContext(typeof(ShareThingsDbContext))]
    [Migration("20210227215302_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShareThings.Domain.Borrow", b =>
                {
                    b.Property<int>("BorrowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BorrowerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("BorrowId");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Borrow");
                });

            modelBuilder.Entity("ShareThings.Domain.BorrowComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BorrowId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Text");

                    b.HasKey("CommentId");

                    b.HasIndex("BorrowId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("ShareThings.Domain.BorrowScore", b =>
                {
                    b.Property<int>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BorrowId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("ScoreId");

                    b.HasIndex("BorrowId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("ShareThings.Domain.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoId");

                    b.HasIndex("ProductId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("ShareThings.Domain.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ShareThings.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserIdentityId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ShareThings.Domain.Borrow", b =>
                {
                    b.HasOne("ShareThings.Domain.User", "Borrower")
                        .WithMany("Borrows")
                        .HasForeignKey("BorrowerId")
                        .HasConstraintName("FK_Borrows_Borrower")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ShareThings.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ShareThings.Domain.Term", "Duration", b1 =>
                        {
                            b1.Property<int>("BorrowId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("End")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("datetime2");

                            b1.HasKey("BorrowId");

                            b1.ToTable("Borrow");

                            b1.WithOwner()
                                .HasForeignKey("BorrowId");
                        });

                    b.Navigation("Borrower");

                    b.Navigation("Duration");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShareThings.Domain.BorrowComment", b =>
                {
                    b.HasOne("ShareThings.Domain.Borrow", "Borrow")
                        .WithMany("Comments")
                        .HasForeignKey("BorrowId")
                        .HasConstraintName("FK_Comments_Borrow")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareThings.Domain.User", "Owner")
                        .WithMany("Comments")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_Comments_User")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Borrow");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ShareThings.Domain.BorrowScore", b =>
                {
                    b.HasOne("ShareThings.Domain.Borrow", "Borrow")
                        .WithMany("Scores")
                        .HasForeignKey("BorrowId")
                        .HasConstraintName("FK_Scores_Borrow")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareThings.Domain.User", "Owner")
                        .WithMany("Scores")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_Scores_User")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("ShareThings.Domain.Score", "Punctuation", b1 =>
                        {
                            b1.Property<int>("BorrowScoreScoreId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Punctuation")
                                .HasColumnType("int");

                            b1.HasKey("BorrowScoreScoreId");

                            b1.ToTable("Score");

                            b1.WithOwner()
                                .HasForeignKey("BorrowScoreScoreId");
                        });

                    b.Navigation("Borrow");

                    b.Navigation("Owner");

                    b.Navigation("Punctuation");
                });

            modelBuilder.Entity("ShareThings.Domain.Photo", b =>
                {
                    b.HasOne("ShareThings.Domain.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Photos_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShareThings.Domain.Product", b =>
                {
                    b.HasOne("ShareThings.Domain.User", "Owner")
                        .WithMany("Products")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_Products_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ShareThings.Domain.ProductType", "Family", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Subtype")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Type")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("ShareThings.Domain.Term", "Availability", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("End")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("datetime2");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Availability");

                    b.Navigation("Family");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ShareThings.Domain.Borrow", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Scores");
                });

            modelBuilder.Entity("ShareThings.Domain.Product", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("ShareThings.Domain.User", b =>
                {
                    b.Navigation("Borrows");

                    b.Navigation("Comments");

                    b.Navigation("Products");

                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
